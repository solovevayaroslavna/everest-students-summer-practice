apiVersion: v1
kind: ServiceAccount
metadata:
  name: everest-admin
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: everest-admin-role
rules:
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["get", "list"]
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: everest-admin-cluster-role
rules:
  - apiGroups: ["everest.percona.com"]
    resources: ["databaseengines"]
    verbs: ["get", "list", "update"]
  - apiGroups: ["everest.percona.com"]
    resources: ["databaseclusters", "databaseclusterbackups", "databaseclusterrestores", "backupstorages", "monitoringconfigs"]
    verbs: ["*"]
  - apiGroups: [""]
    resources: ["secrets", "configmaps", "namespaces"]
    verbs: ["*"]
  - apiGroups: [""]
    resources: ["nodes", "pods", "persistentvolumes"]
    verbs: ["get", "list"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["list"]
  - apiGroups: ["everest.percona.com"]
    resources: ["*"]
    verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: everest-admin-cluster-role-binding
roleRef:
  kind: "ClusterRole"
  apiGroup: "rbac.authorization.k8s.io"
  name: everest-admin-cluster-role
subjects:
  - kind: "ServiceAccount"
    name: everest-admin
    namespace: everest-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: everest-admin-role-binding
roleRef:
  kind: "Role"
  apiGroup: "rbac.authorization.k8s.io"
  name: everest-admin-role
subjects:
  - kind: "ServiceAccount"
    name: everest-admin
---
apiVersion: v1
kind: Secret
metadata:
  name: everest-jwt
data:
  id_rsa: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlDWFFJQkFBS0JnUUM5ZUwzVS9VbnR3SFhDMlBHbkRLNDVlODRtcXUxL2dwclYwS3FpSGEwTDNpd2RmYVViCm5TWkhlTUNtaE9hVWM0ODNWVmlJeTN6NlovdWRjZktNblgrUjgwK2FUWlZ4MVBLdnNFZzQ2TUd5MHpaaU16dy8KL285UVdUNU9POU1iVkp5VjdHOG9rNmdTWW1SY0w2RUQxOEtubjRtRlNuYkZYZDZHa0dZY2tldHo2d0lEQVFBQgpBb0dBZUt4SjJ6bG11SEgzanAyMWF2dDhpMGY2eUUzYzdYVTFRRENpUEpaQi9Ha0lGOUJLTkFnbXRTYUhMSWRBCmhCUUZodXhvY3RlSFJjU3NVRjZlYUVoM1VsaFgvMk1WYmY2WEFWSFdseC9kNVgrRE9hdjNxZmlDa09pUDB0WkwKWkJXRXlLY0hPQnJWRkpCNGxTUmc0TkV0OXpYUFEvSWlRQllqQXlZb1VpUnFDUUVDUVFET3l0M3AvK3Rzemx6UgorYm0xT3diaHNzc1lTNVJiS0w4Mi81MS8vVzR5VkdrQ2NqdkQ2SDRldUhPSjVENEp4T3NNZWdKV3JUVHpZWXRVCjNaaVhGWHBMQWtFQTZvNi9OMFhWOTNUZGttREszclczbk1YeHZBT3lMLzYxOW4rVlY1UjBGdXI4aVZSWFB6R1cKUGZMR01vc2NaSlRDSHNqTUUzaGxXOFlucDRGbU1VWG80UUpBWHJPZkR6T3BZQ25kYmplOEtWZi8zY3Fnb2Q2eQo4VkJteVV3a2wrRzYzb2V6azNBM0dJL1hla0FrZ1dpcVZKVCt3N2I0YlROalJYWk5kYThKMjE3MW93SkJBSlhwCi9INzRUS1FuZG9KYkNPN0ZHQURFWnhkekNVMHhyOTFIZUEwTTNoSFR5T3FCRkc1WVpCMWQ4SjFYV2lOVERLc2UKVFlqWU4zZ3JzeWFWUnRxUlF5RUNRUUNXdWdvUHdrT3B6QjVxMmdoR3F4Z1RiRjRBczRQd0VwNFF3YXYwTUwwMQpleVlFanN5ZVlkUzhPUW82Z0RyaFFqVDF0dlllcFJPNVNHYlUyalB2c0hmdwotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
  id_rsa.pub: LS0tLS1CRUdJTiBSU0EgUFVCTElDIEtFWS0tLS0tCk1JR0pBb0dCQUwxNHZkVDlTZTNBZGNMWThhY01yamw3emlhcTdYK0NtdFhRcXFJZHJRdmVMQjE5cFJ1ZEprZDQKd0thRTVwUnpqemRWV0lqTGZQcG4rNTF4OG95ZGY1SHpUNXBObFhIVThxK3dTRGpvd2JMVE5tSXpQRC8rajFCWgpQazQ3MHh0VW5KWHNieWlUcUJKaVpGd3ZvUVBYd3FlZmlZVktkc1ZkM29hUVpoeVI2M1ByQWdNQkFBRT0KLS0tLS1FTkQgUlNBIFBVQkxJQyBLRVktLS0tLQ==
---
apiVersion: v1
kind: Secret
metadata:
  name: everest-accounts
  annotations:
    insecure-password/admin: "true"
data:
  # username: admin | password: admin
  users.yaml: YWRtaW46CiAgcGFzc3dvcmRIYXNoOiBhZG1pbgogIGVuYWJsZWQ6IHRydWUKICBjYXBhYmlsaXRpZXM6CiAgICAtIGxvZ2lu
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: everest-rbac
data:
  policy.csv: |
    p, adminrole:role, namespaces, read, *
    p, adminrole:role, database-engines, *, */*
    p, adminrole:role, database-clusters, *, */*
    p, adminrole:role, database-cluster-backups, *, */*
    p, adminrole:role, database-cluster-restores, *, */*
    p, adminrole:role, database-clusters-credentials, read, */*
    p, adminrole:role, backup-storages, *, */*
    p, adminrole:role, monitoring-instances, *, */*
    g, admin, adminrole:role
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: percona-everest
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: everest
      app.kubernetes.io/component: everest
  template:
    metadata:
      labels:
        app.kubernetes.io/name: everest
        app.kubernetes.io/component: everest
    spec:
      serviceAccountName: everest-admin
      automountServiceAccountToken: true
      volumes:
      - name: jwt-secret
        secret:
          secretName: everest-jwt
      containers:
        - name: everest
          image: perconalab/everest:0.0.0
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 300
            periodSeconds: 15
          resources:
            limits:
              cpu: 200m
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 20Mi
          volumeMounts:
          - name: jwt-secret
            mountPath: /etc/jwt
---
apiVersion: v1
kind: Service
metadata:
  name: everest
  labels:
    app.kubernetes.io/name: everest
    app.kubernetes.io/component: everest
spec:
  selector:
    app.kubernetes.io/component: everest
    app.kubernetes.io/name: everest
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 8080
---
